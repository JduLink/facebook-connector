/**
 * Mule Facebook Cloud Connector
 *
 * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com
 *
 * The software in this package is published under the terms of the CPAL v1.0
 * license, a copy of which has been included with this distribution in the
 * LICENSE.txt file.
 */

/**
 * This file was automatically generated by the Mule Cloud Connector Development Kit
 */
package org.mule.module.facebook.config;

import static org.junit.Assert.*;

import org.junit.Test;
import org.mule.api.MuleContext;
import org.mule.api.MuleEvent;
import org.mule.api.processor.MessageProcessor;
import org.mule.tck.junit4.FunctionalTestCase;
import org.mule.transport.http.HttpConnector;

public class FacebookNamespaceHandlerTestCase extends FunctionalTestCase {

    @Override
    protected String getConfigResources() {
        return "facebook-namespace-config.xml";
    }

    @Override
    protected MuleContext createMuleContext() throws Exception {
        MuleContext muleContext = super.createMuleContext();
        muleContext.getRegistry().registerObject("connector.http.mule.default", new HttpConnector(muleContext));
        return muleContext;
    }

    @Test
    public void testSendMessageToFlow() throws Exception {
        /*
            This test case tests your Mule integration.

            To test your flow directly (i.e. without any inbound endpoints, declare a flow in
            facebook-namespace-config.xml and put the element from your
            cloud connector's namespace that you want to test into it.
            A proper example was put into facebook-namespace-config.xml

            Now you can send data to your test flow from the unit test:

            String payload = <your input to the flow here>;
            MessageProcessor flow = lookupFlowConstruct("theFlow");
            MuleEvent event = getTestEvent(payload);
            MuleEvent responseEvent = flow.process(event);
            assertEquals(<expected test output>, responseEvent.getMessage().getPayloadAsString());
        */
    }
    
    public void testFlow() throws Exception
    {
        MessageProcessor flow = lookupFlowConstruct("flow-name");
        assertNotNull(flow);
        MuleEvent response = flow.process(getTestEvent(null));
        assertNotNull(response);
    }

    private MessageProcessor lookupFlowConstruct(String name) {
        return (MessageProcessor) muleContext.getRegistry().lookupFlowConstruct(name);
    }
}
