<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>automation-credentials.properties</value>
		</property>
	</bean>

	<bean id="connectorOAuthState"
		class="org.mule.module.facebook.oauth.FacebookConnectorOAuthState">
		<property name="accessToken" value="${facebook.accessToken}" />
	</bean>

	<!-- get-user-by-id -->
	<util:map id="getUserTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="username" value="${facebook.username}" />
	</util:map>

	<!-- get-user-home -->
	<util:map id="getUserHomeTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="user" value="getDynamically" />
		<entry key="since" value="last week" />
		<entry key="until" value="now" />
		<entry key="limit" value="100" />
		<entry key="offset" value="0" />
	</util:map>

	<!-- get-album -->
	<util:map id="getAlbumTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="profileId" value="getDynamically" />
		<entry key="album" value="getDynamically" />
		<entry key="albumName" value="albumForTest" />
		<entry key="msg" value="msgForTest" />
	</util:map>

	<!-- publish-album -->
	<util:map id="publishAlbumTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="profileId" value="getDynamically" />
		<entry key="albumName" value="albumForTest" />
		<entry key="msg" value="msgForTest" />
	</util:map>

	<!-- get-application-albums -->
	<util:map id="getApplicationAlbumsTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="application" value="1395238287373095" />
		<!-- <entry key="since" value="#{T(java.lang.management.ManagementFactory).getRuntimeMXBean().getStartTime()}" 
			/> -->
		<entry key="until" value="now" />

		<entry key="albumName" value="albumForTest" />
		<entry key="msg" value="msgForTest" />
		<entry key="profileId" value="100006563414301" />
	</util:map>

	<!-- get-status -->
	<util:map id="getStatusTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="msg" value="Hello everyone. This is a status message." />
	</util:map>

	<!-- get-status-comments -->
	<util:map id="getStatusCommentsTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="msg" value="This is a status message" />
		<entry key="since" value="yesterday" />
		<entry key="until" value="now" />
		<entry key="limit" value="100" />
		<entry key="offset" value="0" />
		<entry key="comments">
			<list value-type="java.lang.String">
				<value>This is one comment.</value>
				<value>This is another comment.</value>
				<value>This is a third comment.</value>
			</list>
		</entry>
	</util:map>

	<!-- get-post-comments -->
	<util:map id="getPostCommentsTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="msg"
			value="This is a status message specifically to get its comments" />
		<entry key="since" value="yesterday" />
		<entry key="until" value="now" />
		<entry key="limit" value="100" />
		<entry key="offset" value="0" />
		<entry key="comments">
			<list value-type="java.lang.String">
				<value>This is one comment.</value>
				<value>This is another comment.</value>
				<value>This is a third comment.</value>
			</list>
		</entry>
	</util:map>
	
	<!-- publish-photo -->
	<util:map id="publishPhotoTestData" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="caption" value="Photo Caption" />
		<!-- 
			This file must be present in your classpath 
			This file is loaded as follows: getClass().getClassLoader().getResource(fileName) 
			-->
		<entry key="photoFilePath" value="image.jpg" />
	</util:map>

	<!-- get-user-wall -->
	<util:map id="getUserWallTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="messages">
			<list value-type="java.lang.String">
				<value>First message</value>
				<value>Second message</value>
				<value>Third message</value>
			</list>
		</entry>
		<entry key="since" value="yesterday" />
		<entry key="until" value="now" />
		<entry key="limit" value="100" />
		<entry key="offset" value="0" />
	</util:map>
	
	<!-- get-user-tagged -->
	<util:map id="getUserTaggedTestData" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="msg" value="Hello @[MuleSoft]" />
		<entry key="user" value="MuleSoft" />
		<entry key="offset" value="0" />
		<entry key="limit" value="100" />
		<entry key="since" value="yesterday" />
		<entry key="until" value="now" />
	</util:map>

	<!-- get-user-posts -->
	<util:map id="getUserPostsTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="messages">
			<list value-type="java.lang.String">
				<value>First message</value>
				<value>Second message</value>
				<value>Third message</value>
			</list>
		</entry>
		<entry key="since" value="yesterday" />
		<entry key="until" value="now" />
		<entry key="limit" value="100" />
		<entry key="offset" value="0" />
	</util:map>

	<!-- publish-message -->
	<util:map id="publishMessageTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="msg" value="Publishing this message" />
	</util:map>

	<!-- get-page -->
	<util:map id="getPageTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<!-- Facebook developer's page: -->
		<entry key="page" value="19292868552" />
	</util:map>

	<util:map id="likeTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="msg" value="Hello msg" />
	</util:map>

	<util:map id="dislikeTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="msg" value="I hate this message" />
	</util:map>

	<!-- get-page-albums -->
	<util:map id="getPageAlbumsTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<!-- Facebook developer's page: -->
		<entry key="page" value="19292868552" />
	</util:map>

	<!-- delete-object -->
	<util:map id="deleteObjectTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<!-- for publish-message -->
		<entry key="profileId" value="getDynamically" />
		<entry key="msg" value="msgForTest" />
	</util:map>

	<!-- get-user-albums -->
	<util:map id="getUserAlbumsTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="since" value="yesterday" />
		<entry key="until" value="now" />
		<entry key="limit" value="100" />
		<entry key="offset" value="0" />
		<entry key="albumName" value="albumForTest" />
		<entry key="msg" value="msgForTest" />
	</util:map>

	<!-- download-image -->
	<util:map id="downloadImageTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="imageUri" value="${facebook.imageUri}" />
	</util:map>

	<!-- get-album-photos -->
	<util:map id="getAlbumPhotosTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="msg" value="Album Msg" />
		<entry key="albumName" value="My Test Album" />
		<entry key="caption" value="My Photo Caption" />
		<!-- This file must be present in your classpath This file is loaded as 
			follows: getClass().getClassLoader().getResource(fileName) -->
		<entry key="photoFileName" value="image.jpg" />
	</util:map>

	<!-- get-album-comments -->
	<util:map id="getAlbumCommentsTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="msg" value="Album Msg" />
		<entry key="albumName" value="Get Album Comments Album" />
		<entry key="commentMsg" value="This is a comment on my album" />
		<entry key="since" value="yesterday" />
		<entry key="until" value="now" />
		<entry key="limit" value="100" />
		<entry key="offset" value="0" />
	</util:map>

	<!-- publish-comment -->
	<util:map id="publishCommentTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="postId" value="getDynamically" />
		<entry key="msg" value="Hello from comment 123" />
		<entry key="statusmsg" value="Hello From status 123" />
	</util:map>

	<!-- get-application -->
	<util:map id="getApplicationTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="application" value="${facebook.appId}" />
	</util:map>

	<!-- get-post -->
	<util:map id="getPostTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="msg" value="This is message" />
	</util:map>

	<!-- publish-note -->
	<util:map id="publishNoteTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="msg" value="message123" />
		<entry key="subject" value="subject123" />
	</util:map>

	<!-- get-event -->
	<util:map id="getEventTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="eventId" value="getDynamically" />
		<entry key="profileId" value="getDynamically" />
		<entry key="eventName" value="testEventName" />
		<entry key="startTime" value="2013-10-04" />
	</util:map>	

	<!-- search-checkins -->
	<util:map id="searchCheckinsTestData" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="limit" value="100" />
		<entry key="offset" value="0" />
		<entry key="since" value="yesterday" />
		<entry key="until" value="now" />
	</util:map>

	<!-- publish-link -->
	<util:map id="publishLinkTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="msg" value="link attached" />
		<entry key="link" value="http://google.com/" />
	</util:map>

	<!-- get-link -->
	<util:map id="getLinkTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="link" value="http://google.com" />
		<entry key="msg" value="hello" />
	</util:map>

	<!-- get-event-attending -->
	<util:map id="getEventAttendingTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="eventId" value="${facebook.event}" />
		<entry key="since" value="last week" />
		<entry key="until" value="now" />
		<entry key="limit" value="100" />
		<entry key="offset" value="0" />
	</util:map>

	<!-- attend-event -->
	<util:map id="attendEventTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="eventId" value="${facebook.event}" />
	</util:map>	
	
	<!-- publish-event -->
	<util:map id="publishEventTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="profileId" value="getDynamically" />
		<entry key="eventName" value="testEventName" />
		<entry key="startTime" value="2013-10-04" />
	</util:map>

	<!-- decline-event -->
	<util:map id="declineEventTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="eventId" value="${facebook.event}" />
	</util:map>	
	
	<!-- get-user-notes -->
	<util:map id="getUserNotesTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="profileId" value="getDynamically" />
		<entry key="until" value="now" />
		<entry key="msg" value="This is a test note" />
		<entry key="subject" value="This is a test subject for a test note" />
		<entry key="noteid" value="dynamicallyset" />
	</util:map>

	<!-- get-note -->
	<util:map id="getNoteTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="until" value="now" />
		<entry key="msg" value="This is a test note for note test" />
		<entry key="subject" value="This is a test subject for a test note for note test" />
		<entry key="noteid" value="getDynamically" />
		<entry key="profileId" value="getDynamically" />
	</util:map>
	
		<!-- get-note-comments -->
	<util:map id="getNoteCommentsTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="limit" value="100" />
		<entry key="offset" value="0" />
		<entry key="since" value="last week" />
		<entry key="until" value="now" />
		<entry key="msg" value="This is a test note for note test" />
		<entry key="subject" value="This is a test subject for a test note for note test" />
	</util:map>

	<!-- get-event-declined -->
	<util:map id="getEventDeclinedTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="eventId" value="${facebook.event}" />
		<entry key="since" value="last week" />
		<entry key="until" value="now" />
		<entry key="limit" value="100" />
		<entry key="offset" value="0" />
	</util:map>
	
	<!-- get-event-invited -->
	<util:map id="getEventInvitedTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="eventId" value="${facebook.event}" />
		<entry key="since" value="last week" />
		<entry key="until" value="now" />
		<entry key="limit" value="100" />
		<entry key="offset" value="0" />
	</util:map>
	
	<!-- get-event-maybe -->
	<util:map id="getEventMaybeTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="eventId" value="${facebook.event}" />
		<entry key="since" value="last week" />
		<entry key="until" value="now" />
		<entry key="limit" value="100" />
		<entry key="offset" value="0" />
	</util:map>
	
	<!-- get-event-no-reply -->
	<util:map id="getEventNoReplyTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="eventId" value="${facebook.event}" />
		<entry key="since" value="last week" />
		<entry key="until" value="now" />
		<entry key="limit" value="100" />
		<entry key="offset" value="0" />
	</util:map>
</beans>
